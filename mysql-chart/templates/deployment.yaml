apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: mysql
  labels:
    {{- include "mysql-chart.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mysql-chart.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mysql-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      namespace: mysql
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql-chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
      - name: init-mysql
        image: "noname0443/mysync8.0:v0.1"
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}

          rm -rf /mnt/conf.d/$HOSTNAME/*
          rm -rf /mnt/data/$HOSTNAME/*

          mkdir -p /mnt/conf.d/$HOSTNAME
          mkdir -p /mnt/data/$HOSTNAME

          touch /mnt/conf.d/$HOSTNAME/server-id.cnf

          echo [mysqld] > /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "plugin_load_add = 'rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so'" >> /mnt/conf.d/$HOSTNAME/server-id.cnf

          echo "pid_file=/var/lib/mysql/mysqld.pid" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "gtid_mode=ON" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "enforce_gtid_consistency=ON" >> /mnt/conf.d/$HOSTNAME/server-id.cnf

          echo "log_slave_updates=ON" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "binlog_format=ROW" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "sync_binlog=1" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "innodb_flush_log_at_trx_commit=1" >> /mnt/conf.d/$HOSTNAME/server-id.cnf

          echo "read_only=ON" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "super_read_only=ON" >> /mnt/conf.d/$HOSTNAME/server-id.cnf
          echo "default_authentication_plugin=mysql_native_password" >> /mnt/conf.d/$HOSTNAME/server-id.cnf

          echo server-id=$((1000 + $ordinal)) >> /mnt/conf.d/$HOSTNAME/server-id.cnf
        volumeMounts:
        - name: storage
          mountPath: "/mnt/data"
        - name: conf-mysql
          mountPath: /mnt/conf.d
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mysql-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mysql-{{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "noname0443/mysync8.0:v0.1"
          imagePullPolicy: Always
          env:
          - name: MYSQL_REPL_USER
            value: "{{ .Values.mysql.repl_user }}"
          - name: MASTER
            value: "{{ print .Release.Name "-0." .Release.Name "-mysql-cluster.mysql.svc.cluster.local" }}"
          - name: MYSQL_REPL_PASSWORD
            value: "{{ .Values.mysql.repl_pass }}"
          - name: MYSQL_ROOT_PASSWORD
            value: "{{ .Values.mysql.password }}"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: HOSTNAME
            value: "$(POD_NAME).{{ print .Release.Name "-mysql-cluster.mysql.svc.cluster.local" }}"
          ports:
          - name: tcp
            containerPort: {{ .Values.service.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: mysync-config
            mountPath: "/etc/configs"
          - name: storage
            mountPath: "/var/lib/mysql"
            subPathExpr: $(POD_NAME)
          - name: conf-mysql
            mountPath: "/etc/mysql/conf.d/"
            subPathExpr: $(POD_NAME)
        - name: zookeeper-{{ .Release.Name }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "registry.k8s.io/kubernetes-zookeeper:1.0-3.4.10"
          imagePullPolicy: IfNotPresent
          ports:
            - name: client
              containerPort: 2181
            - name: server
              containerPort: 2888
            - name: leader-election
              containerPort: 3888
          command:
          - sh
          - -c
          - "start-zookeeper \
            --servers={{ .Values.replicaCount }} \
            --data_dir=/var/lib/zookeeper/data \
            --data_log_dir=/var/lib/zookeeper/data/log \
            --conf_dir=/opt/zookeeper/conf \
            --client_port=2181 \
            --election_port=3888 \
            --server_port=2888 \
            --tick_time=2000 \
            --init_limit=10 \
            --sync_limit=5 \
            --heap=512M \
            --max_client_cnxns=60 \
            --snap_retain_count=3 \
            --purge_interval=12 \
            --max_session_timeout=40000 \
            --min_session_timeout=4000 \
            --log_level=INFO"
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "zookeeper-ready 2181"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "zookeeper-ready 2181"
            initialDelaySeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: mysync-config
          configMap:
            name: mysql-config-{{ .Release.Name }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        - name: conf-mysql
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc-conf-mysql
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
